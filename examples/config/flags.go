// Code generated by github.com/scottshotgg/configsquared; DO NOT EDIT.

// It is in your best interest NOT to edit this file as it will be removed if re-generated.

package config

import "flag"

type flags struct {
	port    stringFlag
	mock    boolFlag
	timeout intFlag
	at      timeFlag
	remote  urlFlag
}

func newFlags() *flags {
	var f flags

	flag.Var(&f.port, "port", "Port that the server is hosted on")
	flag.Var(&f.mock, "mock", "Whether to mock the backing data storage for testing")
	flag.Var(&f.timeout, "timeout", "Set the default HTTP timeout")
	flag.Var(&f.at, "at", "")
	flag.Var(&f.remote, "remote", "")

	// nested struct fields

	f.at.layout = "2006-01-02T15:04:05Z07:00"

	return &f
}

func (f *flags) required() {
	if !f.port.set {
		// just for now
		panic("port is a required flag")
	}
}

func (f *flags) defaults() {
	if !f.port.set {
		var err = f.port.Set("8080")
		if err != nil {
			// _probably_ just for now
			panic(err)
		}
	}
	if !f.timeout.set {
		var err = f.timeout.Set("15")
		if err != nil {
			// _probably_ just for now
			panic(err)
		}
	}
}

func (f *flags) toConfig() Config {
	return Config{
		port:    f.port.value,
		mock:    f.mock.value,
		timeout: f.timeout.value,
		at:      f.at.value,
		remote:  f.remote.value,
	}
}
